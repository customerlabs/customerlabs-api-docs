openapi: 3.0.0
info:
  title: CustomerLabs API Spec
  description: |-
    The CustomerLabs API allows developers to 
    programmatically create new accounts within the CustomerLabs 
    platform. This API enables seamless integration with existing systems and workflows, 
    streamlining the process of onboarding accounts.

  contact:
    email: developers@customerlabs.co
  version: vBeta
externalDocs:
  description: Find out more about Customerlabs
  url: http://www.customerlabs.com
servers:
  - url: https://api.customerlabs.com/api/vbeta
tags:
  - name: Agency
    description: API to create accounts in agency account
  - name: Accounts
    description: API to manage accounts.

paths:
  /agency/{agency_id}/accounts:
    get:
      summary: List Accounts API
      tags:
        - Agency
      description: List all the accounts created
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/perPageParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountsList'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
    post:
      summary: Create Account API
      tags:
        - Agency
      description: |-
        Creates an Agency account for the Campaigner and generates subaccounts within CustomerLabs for each customer.
        
        Request Body:
        - `agency_id`: A unique identifier for the agency.
        - `account_details`: Details of the account including time zone, name, email, website, and average revenue.
        
        Validation Guidelines:
        - `agency_id`: Must be a string.
        - `account_details.name`: Must be a string.
        - `account_details.time_zone`: Must be in ISO format, e.g., 'Asia/Kolkata'.
        - `account_details.email`: Must be a valid email address.
        - `account_details.website`: Must be a valid URL.
        - `account_details.industry`: Must be one of the provided industry values.
        - `account_details.average_spend`: Must be one of the provided average spend values.

      requestBody:
        required: true
        description: "Request body for creating an Agency account."
        content:
          application/json:
            schema:
              type: object
              properties:
                agency_id:
                  type: string
                account_details:
                  type: object
                  properties:
                    time_zone:
                      type: string
                      example: "Asia/Kolkata"
                      description: "The time zone of the agency. Should be in ISO format, e.g., 'Asia/Kolkata'."
                    name:
                      type: string
                      example: "CustomerLabs"
                    email:
                      type: string
                      example: "developers@customerlabs.co"
                    website:
                      type: string
                      example: "www.customerlabs.com"
                    average_spend:
                      type: integer
                      enum: [1, 2, 3]
                      description: |
                        - 1 ("Less than 10,000 USD")
                        - 2 ("10,000 - 50,000 USD")
                        - 3 ("50,000 USD and above")
                    industry:
                      type: string
                      enum:
                        - "ecommerce"
                        - "saas"
                        - "b2b"
                        - "b2c"
                        - "agency"
                        - "others"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountCreationResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - ApiKeyAuth: []
  /agency/{agency_id}/accounts/{account_id}:
    get:
      summary: Get Account Details API
      tags:
        - Agency
      description: Get the details of the account created
      parameters:
        - $ref: '#/components/parameters/agencyIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountCreationResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
    put:
      summary: Update Account Details API
      tags:
        - Agency
      description: Update the details of the account created
      parameters:
        - $ref: '#/components/parameters/agencyIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                website:
                  type: string
                average_spend:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountCreationResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
    delete:
      summary: Delete Account API
      tags:
        - Agency
      description: Delete the account created
      parameters:
        - $ref: '#/components/parameters/agencyIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountDeletionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
  /agency/{agency_id}/accounts/{account_id}/deactivate:
    put:
      summary: Deactivate Account API
      tags:
        - Agency
      description: Deactivate the account created
      parameters:
        - $ref: '#/components/parameters/agencyIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountDeletionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
  /agency/{agency_id}/accounts/{account_id}/activate:
    put:
      summary: Activate Account API
      tags:
        - Agency
      description: Activate the account created
      parameters:
        - $ref: '#/components/parameters/agencyIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/AccountDeletionResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized

  /accounts/{account_id}/events:
    get:
      summary: Get Account Events API
      tags:
        - Accounts
      description: Get the events of the account created
      parameters:
        - $ref: '#/components/parameters/accountIdParam'
        - $ref: '#/components/parameters/startDateParam'
        - $ref: '#/components/parameters/endDateParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/EventsList'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
  /accounts/{account_id}/domains:
    get:
      summary: Get Account Domains API
      tags:
        - Accounts
      description: Get the domains of the account created
      parameters:
        - $ref: '#/components/parameters/accountIdParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/perPageParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/DomainsList'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
    post: 
      summary: Add Account Domains API
      tags:
        - Accounts
      description: Add the domains of the account created
      parameters:
        - $ref: '#/components/parameters/accountIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain_name:
                  type: string
                domain_status:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/DomainDetails'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
    delete:
      summary: Delete Account Domains API
      tags:
        - Accounts
      description: Delete the domains of the account created
      parameters:
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
  /accounts/{account_id}/pixel_code:
    get:
      summary: Get Account Pixel Code API
      tags:
        - Accounts
      description: Get the pixel code of the account created
      parameters:
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixelCodeResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
  /agency/{agency_id}/accounts/{account_id}/api_key:
    get:
      summary: Get Account API Key API
      tags:
        - Agency
      description: Get the API key of the account created
      parameters:
        - $ref: '#/components/parameters/agencyIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyAuth'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
    delete:
      summary: Delete Account API Key API
      tags:
        - Agency
      description: Delete the API key of the account created
      parameters:
        - $ref: '#/components/parameters/agencyIdParam'
        - $ref: '#/components/parameters/accountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
    put:
      summary: Regenerate Account API Key API
      tags:
        - Agency
      description: Regenerate the API key of the account created
      parameters:
        - $ref: '#/components/parameters/accountIdParam'
        - $ref: '#/components/parameters/agencyIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyAuth'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized

security:
  - ApiKeyAuth: []

components:

  schemas:
    AccountResponse:
      type: object
      properties:
        agency_id: 
          type: string
        agency_name:
          type: string
        account_details:
          type: object
          properties:
            name:
              type: string
            account_id:
              type: string
            events_count:
              type: integer
            segments_count:
              type: integer
            destination_count:
              type: integer
            source_count:
              type: integer
    AccountDeletionResponse:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          example: []
        messages:
          type: array
          example: []
        result:
          type: object
          properties:
            agency_id: 
              type: string
            agency_name:
              type: string
            account_details:
              type: object
              properties:
                name:
                  type: string
                account_id:
                  type: string       
    AccountCreationResponse:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          example: []
        messages:
          type: array
          example: []
        result:
            $ref: '#/components/schemas/AccountResponse'
    PixelCodeResponse:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          example: []
        messages:
          type: array
          example: []
        result:
          type: object
          properties:
            pixel_code:
              type: string
              example: "<script>...</script>"
    AccountsList:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          example: []
        messages:
          type: array
          example: []
        result:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'   
        result_info:
          type: object
          properties:
            count:
              type: integer
              example: 1
            page:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 10
            total_count:
              type: integer
              example: 1
    ApiKeyAuth:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          example: []
        messages:
          type: array
          example: []
        result:
          type: object
          properties:
            api_key:
              type: string

    Events:
      type: object
      properties:
        event_name: 
          type: string
        event_count:
          type: integer
          example: 100
        event_source:
          type: string
          example: "Server"
        event_status:
          type: string
          example: "Last received 12 days ago"
    EventsList:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          example: []
        messages:
          type: array
          example: []
        result:
          type: array
          items:
            $ref: '#/components/schemas/Events'   
        result_info:
          type: object
          properties:
            count:
              type: integer
              example: 1
            page:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 10
            total_count:
              type: integer
              example: 1
    Domains:
      type: object
      properties:
        domain_name: 
          type: string
        domain_status:
          type: string
          example: "Active"
        domain_created_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
    DomainsList:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          example: []
        messages:
          type: array
          example: []
        result:
          type: array
          items:
            $ref: '#/components/schemas/Domains'   
        result_info:
          type: object
          properties:
            count:
              type: integer
              example: 1
            page:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 10
            total_count:
              type: integer
              example: 1
    DomainDetails:
      type: object
      properties:
        domain_name: 
          type: string
        domain_status:
          type: string
          example: "Active"
        domain_created_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
        domain_updated_at:
          type: string
          format: date-time
          example: "2021-01-01T00:00:00Z"
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        errors:
          type: array
          example: [
            { code: "400",
            message: "Invalid input"
            }
          ]
  parameters:
    accountIdParam:
      name: account_id
      in: path
      description: Account ID
      required: true
      schema:
        type: string
    agencyIdParam:
      name: agency_id
      in: path
      description: Agency ID
      required: true
      schema:
        type: string
    startDateParam:
      name: start_date
      in: query
      description: Start date for filtering events
      required: false
      schema:
        type: string
        format: date-time
        example: "2021-01-01T00:00:00Z"
    endDateParam:
      name: end_date
      in: query
      description: End date for filtering events
      required: false
      schema:
        type: string
        format: date-time
        example: "2021-12-31T23:59:59Z"
    pageParam:
      name: page
      in: query
      description: Page number
      required: false
      schema:
        type: integer
        example: 1
    perPageParam:
      name: per_page
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        example: 10
  
  securitySchemes:
    api_key:
      type: apiKey
      name: customerlabs-api-key
      in: header
  